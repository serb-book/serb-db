-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-05-06 18:36:11 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g


CREATE user book identified by "book" profile default account unlock;

GRANT CONNECT, RESOURCE, DBA TO book;
GRANT UNLIMITED TABLESPACE TO book;
GRANT CREATE SESSION  to book;


CREATE TABLE book.account (
    id          NUMBER NOT NULL,
    email       VARCHAR2(50 BYTE),
    password    VARCHAR2(50 BYTE) NOT NULL,
    username    VARCHAR2(50 BYTE) NOT NULL,
    picture     VARCHAR2(1000 BYTE),
    blocked_by  NUMBER
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.account.password IS
    'use some encription length';

CREATE UNIQUE INDEX book.account_pk ON
    book.account (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.account
    ADD CONSTRAINT account_pk PRIMARY KEY ( id )
        USING INDEX book.account_pk;

CREATE TABLE book.account_phone (
    phone_number  NUMBER,
    id            NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.account_phone_pk ON
    book.account_phone (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.account_phone
    ADD CONSTRAINT account_phone_pk PRIMARY KEY ( id )
        USING INDEX book.account_phone_pk;

CREATE TABLE book.book (
    id             NUMBER(*, 0) NOT NULL,
    refrence_link  VARCHAR2(1000 BYTE),
    description    VARCHAR2(500 BYTE) NOT NULL,
    isbn           VARCHAR2(30 BYTE) NOT NULL,
    title          VARCHAR2(150 BYTE) NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.book.refrence_link IS
    'using api of good read(linking for book in good red)
';

CREATE UNIQUE INDEX book.book_pk ON
    book.book (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.book
    ADD CONSTRAINT book_pk PRIMARY KEY ( id )
        USING INDEX book.book_pk;

CREATE TABLE book.book_authores (
    name  VARCHAR2(100 BYTE) NOT NULL,
    id    NUMBER(*, 0) NOT NULL
)
TABLESPACE system LOGGING;

CREATE TABLE book.book_belongsto_category (
    id           NUMBER NOT NULL,
    book_id      NUMBER(*, 0) NOT NULL,
    category_id  NUMBER(*, 0) NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.book_belongsto_category_pk ON
    book.book_belongsto_category (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.book_belongsto_category
    ADD CONSTRAINT book_belongsto_category_pk PRIMARY KEY ( id )
        USING INDEX book.book_belongsto_category_pk;

CREATE TABLE book.category (
    name      VARCHAR2(50 BYTE) NOT NULL,
    id        NUMBER(*, 0) NOT NULL,
    super_id  NUMBER(*, 0)
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.category.id IS
    'MAY BE CHANGED LATER';

CREATE UNIQUE INDEX book.category_pk ON
    book.category (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.category
    ADD CONSTRAINT category_pk PRIMARY KEY ( id )
        USING INDEX book.category_pk;

CREATE TABLE book.client (
    full_name   VARCHAR2(128 BYTE) NOT NULL,
    ssn         NUMBER,
    account_id  NUMBER NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.client.ssn IS
    'limit it to 14 numbers';

CREATE UNIQUE INDEX book.client_pk ON
    book.client (
        account_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client
    ADD CONSTRAINT client_pk PRIMARY KEY ( account_id )
        USING INDEX book.client_pk;

CREATE TABLE book.client_address (
    city        VARCHAR2(100 BYTE) NOT NULL,
    government  VARCHAR2(100 BYTE) NOT NULL,
    street      VARCHAR2(500 BYTE),
    country     VARCHAR2(100 BYTE) NOT NULL,
    longitude   NUMBER,
    latitude    NUMBER,
    id          NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.client_address_pk ON
    book.client_address (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client_address
    ADD CONSTRAINT client_address_pk PRIMARY KEY ( id )
        USING INDEX book.client_address_pk;

CREATE TABLE book.client_follow_client (
    follower_id  NUMBER,
    followed_id  NUMBER,
    id           NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.client_follow_client_pk ON
    book.client_follow_client (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client_follow_client
    ADD CONSTRAINT client_follow_client_pk PRIMARY KEY ( id )
        USING INDEX book.client_follow_client_pk;

CREATE TABLE book.client_interestedin_category (
    id           NUMBER NOT NULL,
    client_id    NUMBER NOT NULL,
    category_id  NUMBER(*, 0) NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.client_interestedin_catego_pk ON
    book.client_interestedin_category (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client_interestedin_category
    ADD CONSTRAINT client_interestedin_catego_pk PRIMARY KEY ( id )
        USING INDEX book.client_interestedin_catego_pk;

CREATE TABLE book.client_manage_club (
    relation_id      NUMBER NOT NULL,
    club_id          NUMBER NOT NULL,
    privilege_level  NUMBER DEFAULT 1 NOT NULL,
    client_id        NUMBER NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.client_manage_club.privilege_level IS
    'admin = 0, moderator = 1';

CREATE UNIQUE INDEX book.table1_pk ON
    book.client_manage_club (
        relation_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client_manage_club
    ADD CONSTRAINT table1_pk PRIMARY KEY ( relation_id )
        USING INDEX book.table1_pk;

CREATE TABLE book.client_review_book (
    id              NUMBER NOT NULL,
    client_id       NUMBER NOT NULL,
    book_id         NUMBER(*, 0) NOT NULL,
    review_contetn  VARCHAR2(200 BYTE) NOT NULL,
    review_score    NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.client_review_book_pk ON
    book.client_review_book (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.client_review_book
    ADD CONSTRAINT client_review_book_pk PRIMARY KEY ( id )
        USING INDEX book.client_review_book_pk;

CREATE TABLE book.clinet_join_club (
    id         NUMBER NOT NULL,
    client_id  NUMBER NOT NULL,
    club_id    NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.clinet_join_club_pk ON
    book.clinet_join_club (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.clinet_join_club
    ADD CONSTRAINT clinet_join_club_pk PRIMARY KEY ( id )
        USING INDEX book.clinet_join_club_pk;

CREATE TABLE book.club (
    id    NUMBER NOT NULL,
    name  VARCHAR2(100 BYTE) NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.club.id IS
    'MAT BE CHANGED';

CREATE UNIQUE INDEX book.club_pk ON
    book.club (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.club
    ADD CONSTRAINT club_pk PRIMARY KEY ( id )
        USING INDEX book.club_pk;

CREATE TABLE book.gate (
    url  VARCHAR2(2083 BYTE),
    id   NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.gate_pk ON
    book.gate (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.gate
    ADD CONSTRAINT gate_pk PRIMARY KEY ( id )
        USING INDEX book.gate_pk;

CREATE TABLE book.gate_access (
    user_type  NUMBER NOT NULL,
    id         NUMBER NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.gate_access.user_type IS
    '0:superuser
1:clien
2:shipper';

CREATE UNIQUE INDEX book.gate_access_pk ON
    book.gate_access (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.gate_access
    ADD CONSTRAINT gate_access_pk PRIMARY KEY ( id )
        USING INDEX book.gate_access_pk;

CREATE TABLE book.list (
    name     VARCHAR2(50 BYTE) NOT NULL,
    made_by  NUMBER NOT NULL,
    icon     VARCHAR2(1000 BYTE),
    id       NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.list_pk ON
    book.list (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.list
    ADD CONSTRAINT list_pk PRIMARY KEY ( id )
        USING INDEX book.list_pk;

CREATE TABLE book.list_have_book (
    list_id  NUMBER,
    book_id  NUMBER(*, 0)
)
TABLESPACE system LOGGING;

CREATE TABLE book.message (
    id          VARCHAR2(20 BYTE) NOT NULL,
    content     VARCHAR2(200 BYTE) NOT NULL,
    send_date   TIMESTAMP NOT NULL,
    media_link  VARCHAR2(20 BYTE),
    sender_id   NUMBER NOT NULL,
    reciver_id  NUMBER
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.message_pk ON
    book.message (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.message
    ADD CONSTRAINT message_pk PRIMARY KEY ( id )
        USING INDEX book.message_pk;

CREATE TABLE book.offer (
    id              NUMBER NOT NULL,
    type            NUMBER NOT NULL,
    offer_end_time  DATE,
    client_id       NUMBER NOT NULL,
    book_id         NUMBER(*, 0) NOT NULL,
    state_text      VARCHAR2(1000 BYTE)
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.offer.type IS
    '0:sell
1:exchange
2:rent';

COMMENT ON COLUMN book.offer.offer_end_time IS
    'option for renting';

CREATE UNIQUE INDEX book.offer_pk ON
    book.offer (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.offer
    ADD CONSTRAINT offer_pk PRIMARY KEY ( id )
        USING INDEX book.offer_pk;

CREATE TABLE book.offer_exchange (
    offer_id           NUMBER NOT NULL,
    negotiation_price  NUMBER
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.offer_exchange_pk ON
    book.offer_exchange (
        offer_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.offer_exchange
    ADD CONSTRAINT offer_exchange_pk PRIMARY KEY ( offer_id )
        USING INDEX book.offer_exchange_pk;

CREATE TABLE book.offer_exchange_inerest_inlist (
    list_id   NUMBER NOT NULL,
    offer_id  NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE TABLE book.offer_exchange_interest_inbook (
    book_id   NUMBER(*, 0) NOT NULL,
    offer_id  NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE TABLE book.offer_exchange_interest_inclub (
    offer_id  NUMBER NOT NULL,
    club_id   NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE TABLE book.offer_rent (
    price_per_day      NUMBER,
    maximum_rent_time  DATE,
    offer_id           NUMBER
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.offer_rent.maximum_rent_time IS
    'DENOTES THE DATE I WANT TO RETRIVE MY BOOK IN';

CREATE TABLE book.offer_sell (
    offer_id  NUMBER,
    price     NUMBER
)
TABLESPACE system LOGGING;

CREATE TABLE book.offer_state_image (
    offer_id    NUMBER NOT NULL,
    media_link  VARCHAR2(2000 BYTE) NOT NULL
)
TABLESPACE system LOGGING;

CREATE TABLE book.payment_method (
    id NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.payment_methods_pk ON
    book.payment_method (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.payment_method
    ADD CONSTRAINT payment_methods_pk PRIMARY KEY ( id )
        USING INDEX book.payment_methods_pk;

CREATE TABLE book.payment_method_cc (
    payment_id NUMBER NOT NULL
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.payment_method_cc.payment_id IS
    'ADD CREDIT CART INFO LATER';

CREATE UNIQUE INDEX book.payment_method_cc_pk ON
    book.payment_method_cc (
        payment_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.payment_method_cc
    ADD CONSTRAINT payment_method_cc_pk PRIMARY KEY ( payment_id )
        USING INDEX book.payment_method_cc_pk;

CREATE TABLE book.payment_method_cod (
    payment_id  NUMBER NOT NULL,
    amount      NUMBER
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.payment_method_cod_pk ON
    book.payment_method_cod (
        payment_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.payment_method_cod
    ADD CONSTRAINT payment_method_cod_pk PRIMARY KEY ( payment_id )
        USING INDEX book.payment_method_cod_pk;

CREATE TABLE book.post (
    content     VARCHAR2(400 BYTE) NOT NULL,
    media_link  VARCHAR2(2083 BYTE),
    club_id     NUMBER,
    client_id   NUMBER NOT NULL,
    id          NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.post_pk ON
    book.post (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.post
    ADD CONSTRAINT post_pk PRIMARY KEY ( id )
        USING INDEX book.post_pk;

CREATE TABLE book.post_pull_option (
    post_id      NUMBER,
    poll_option  VARCHAR2(20 BYTE)
)
TABLESPACE system LOGGING;

CREATE TABLE book.shipper (
    company_name  VARCHAR2(20 BYTE),
    id            NUMBER NOT NULL,
    column1       VARCHAR2(20 BYTE)
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.shipper_pk ON
    book.shipper (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.shipper
    ADD CONSTRAINT shipper_pk PRIMARY KEY ( id )
        USING INDEX book.shipper_pk;

CREATE TABLE book.super_user (
    account_id NUMBER NOT NULL
)
TABLESPACE system LOGGING;

CREATE UNIQUE INDEX book.super_user_pk ON
    book.super_user (
        account_id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.super_user
    ADD CONSTRAINT super_user_pk PRIMARY KEY ( account_id )
        USING INDEX book.super_user_pk;

CREATE TABLE book.transaction (
    approval_time   TIMESTAMP,
    state           NUMBER NOT NULL,
    id              VARCHAR2(20 BYTE) NOT NULL,
    start_renting   DATE,
    duration        NUMBER,
    type            NUMBER NOT NULL,
    book_id         NUMBER(*, 0) NOT NULL,
    book_amount     NUMBER,
    sold_by         NUMBER NOT NULL,
    bought_by       NUMBER NOT NULL,
    shipped_by      NUMBER,
    sending_date    DATE,
    receiving_date  DATE NOT NULL,
    payment_method  NUMBER
)
TABLESPACE system LOGGING;

COMMENT ON COLUMN book.transaction.state IS
    'State = enum [
	In cart,
	Pending(wait other user approve),
	approved(user accept sending),
	Shipping(book at shipper hand),
Shipped(book at buyer hand),
 // for   customer
Shipped Back // for seller
]
';

COMMENT ON COLUMN book.transaction.type IS
    '0:SELLING , 1:RENTING , 2:EXCHANGE';

CREATE UNIQUE INDEX book.transaction_pk ON
    book.transaction (
        id
    ASC )
        TABLESPACE system LOGGING;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_pk PRIMARY KEY ( id )
        USING INDEX book.transaction_pk;

ALTER TABLE book.super_user
    ADD CONSTRAINT account FOREIGN KEY ( account_id )
        REFERENCES book.account ( id )
    NOT DEFERRABLE;

ALTER TABLE book.account
    ADD CONSTRAINT account_fk1 FOREIGN KEY ( blocked_by )
        REFERENCES book.super_user ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.account_phone
    ADD CONSTRAINT account_phone_fk1 FOREIGN KEY ( id )
        REFERENCES book.account ( id )
    NOT DEFERRABLE;

ALTER TABLE book.book_authores
    ADD CONSTRAINT book_authores_fk1 FOREIGN KEY ( id )
        REFERENCES book.book ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE book.book_belongsto_category
    ADD CONSTRAINT book_belongsto_category_fk1 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.book_belongsto_category
    ADD CONSTRAINT book_belongsto_category_fk2 FOREIGN KEY ( category_id )
        REFERENCES book.category ( id )
    NOT DEFERRABLE;

ALTER TABLE book.client_interestedin_category
    ADD CONSTRAINT cat_client_interestedin_categ FOREIGN KEY ( category_id )
        REFERENCES book.category ( id )
    NOT DEFERRABLE;

ALTER TABLE book.category
    ADD CONSTRAINT category_fk1 FOREIGN KEY ( super_id )
        REFERENCES book.category ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE book.client_interestedin_category
    ADD CONSTRAINT cli_client_interestedin_categ FOREIGN KEY ( client_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.post
    ADD CONSTRAINT client FOREIGN KEY ( club_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.client_address
    ADD CONSTRAINT client_address_fk1 FOREIGN KEY ( id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.client_manage_club
    ADD CONSTRAINT client_clinet_manages_club FOREIGN KEY ( client_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.client
    ADD CONSTRAINT client_fk1 FOREIGN KEY ( account_id )
        REFERENCES book.account ( id )
    NOT DEFERRABLE;

ALTER TABLE book.client_review_book
    ADD CONSTRAINT client_review_book_fk1 FOREIGN KEY ( client_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.client_review_book
    ADD CONSTRAINT client_review_book_fk2 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.clinet_join_club
    ADD CONSTRAINT clinet_clinet_join_club FOREIGN KEY ( client_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.post
    ADD CONSTRAINT club FOREIGN KEY ( club_id )
        REFERENCES book.club ( id )
    NOT DEFERRABLE;

ALTER TABLE book.client_manage_club
    ADD CONSTRAINT club_id_client_manage_club FOREIGN KEY ( club_id )
        REFERENCES book.club ( id )
    NOT DEFERRABLE;

ALTER TABLE book.client_follow_client
    ADD CONSTRAINT followed_client_follow_client FOREIGN KEY ( followed_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.client_follow_client
    ADD CONSTRAINT follower_client_follow_client FOREIGN KEY ( follower_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.gate_access
    ADD CONSTRAINT gate_access_fk1 FOREIGN KEY ( id )
        REFERENCES book.gate ( id )
    NOT DEFERRABLE;

ALTER TABLE book.list
    ADD CONSTRAINT list_fk1 FOREIGN KEY ( made_by )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.list_have_book
    ADD CONSTRAINT list_have_book_fk1 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.list_have_book
    ADD CONSTRAINT list_have_book_fk2 FOREIGN KEY ( list_id )
        REFERENCES book.list ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange
    ADD CONSTRAINT offer_exchange FOREIGN KEY ( offer_id )
        REFERENCES book.offer ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_inerest_inlist
    ADD CONSTRAINT offer_exchange_inerest_in_fk1 FOREIGN KEY ( offer_id )
        REFERENCES book.offer_exchange ( offer_id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_inerest_inlist
    ADD CONSTRAINT offer_exchange_inerest_in_fk2 FOREIGN KEY ( list_id )
        REFERENCES book.list ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_interest_inbook
    ADD CONSTRAINT offer_exchange_interest_i_fk1 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_interest_inbook
    ADD CONSTRAINT offer_exchange_interest_i_fk2 FOREIGN KEY ( offer_id )
        REFERENCES book.offer_exchange ( offer_id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_interest_inclub
    ADD CONSTRAINT offer_exchange_interest_i_fk3 FOREIGN KEY ( offer_id )
        REFERENCES book.offer_exchange ( offer_id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_exchange_interest_inclub
    ADD CONSTRAINT offer_exchange_interest_i_fk4 FOREIGN KEY ( club_id )
        REFERENCES book.club ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer
    ADD CONSTRAINT offer_fk1 FOREIGN KEY ( client_id )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.offer
    ADD CONSTRAINT offer_fk2 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.offer_rent
    ADD CONSTRAINT offer_rent FOREIGN KEY ( offer_id )
        REFERENCES book.offer ( id )
    NOT DEFERRABLE;

ALTER TABLE book.payment_method_cc
    ADD CONSTRAINT payment_method_cc_fk1 FOREIGN KEY ( payment_id )
        REFERENCES book.payment_method ( id )
    NOT DEFERRABLE;

ALTER TABLE book.payment_method_cod
    ADD CONSTRAINT payment_method_cod_fk1 FOREIGN KEY ( payment_id )
        REFERENCES book.payment_method ( id )
    NOT DEFERRABLE;

ALTER TABLE book.post_pull_option
    ADD CONSTRAINT post_pull_option_fk1 FOREIGN KEY ( post_id )
        REFERENCES book.post ( id )
    NOT DEFERRABLE;

ALTER TABLE book.message
    ADD CONSTRAINT reciver_message_fk FOREIGN KEY ( reciver_id )
        REFERENCES book.account ( id )
    NOT DEFERRABLE;

ALTER TABLE book.message
    ADD CONSTRAINT sender_message_fk FOREIGN KEY ( sender_id )
        REFERENCES book.account ( id )
    NOT DEFERRABLE;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_fk1 FOREIGN KEY ( book_id )
        REFERENCES book.book ( id )
    NOT DEFERRABLE;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_fk2 FOREIGN KEY ( sold_by )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_fk3 FOREIGN KEY ( bought_by )
        REFERENCES book.client ( account_id )
    NOT DEFERRABLE;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_fk4 FOREIGN KEY ( shipped_by )
        REFERENCES book.shipper ( id )
    NOT DEFERRABLE;

ALTER TABLE book.transaction
    ADD CONSTRAINT transaction_fk5 FOREIGN KEY ( payment_method )
        REFERENCES book.payment_method ( id )
    NOT DEFERRABLE;

CREATE OR REPLACE VIEW BOOK.BOOK_ALL ( ID, REFRENCE_LINK, DESCRIPTION, ISBN, TITLE, AUTHORS, OFFER_ID, OFFER_TYPE ) AS
select b_all.ID, b_all.REFRENCE_LINK , b_all.DESCRIPTION, b_all.ISBN, b_all.TITLE, b_all.authors,
LISTAGG(ofr.id,',') WITHIN GROUP (ORDER BY ofr.id) offer_id, 
LISTAGG(ofr.type, ',') WITHIN GROUP (ORDER BY ofr.id) offer_type
from 
(SELECT b.ID , b.REFRENCE_LINK, b.DESCRIPTION, b.ISBN, b.TITLE,
    LISTAGG(b_a.NAME, ',') WITHIN GROUP (ORDER BY b_a.NAME) authors
    from book b
    inner join book_authores b_a on b.id = b_a.id 
    GROUP BY b.ID , b.REFRENCE_LINK, b.DESCRIPTION, b.ISBN, b.TITLE) b_all
inner join offer ofr on ofr.book_id = b_all.id
GROUP BY b_all.ID , b_all.REFRENCE_LINK, b_all.DESCRIPTION, b_all.ISBN, b_all.TITLE, b_all.authors 
;

CREATE OR REPLACE VIEW BOOK.OFFER_FULL ( ID, TYPE, CLIENT_ID, BOOK_ID, STATE_TEXT, OFFER_END_TIME, PRICE, MAXIMUM_RENT_TIME ) AS
SELECT
    offer.ID, offer.TYPE, offer.CLIENT_ID, offer.BOOK_ID, offer.STATE_TEXT, offer.OFFER_END_TIME,
    NVL(offer_exchange.NEGOTIATION_PRICE, NVL(offer_sell.PRICE, NVL(offer_rent.PRICE_PER_DAY, NULL))) price,
    offer_rent.MAXIMUM_RENT_TIME
FROM offer
left join offer_exchange on offer.id = offer_exchange.offer_id
left join offer_rent on offer.id = offer_rent.offer_id
left join offer_sell on offer.id = offer_sell.offer_id 
;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            35
-- CREATE INDEX                            26
-- ALTER TABLE                             70
-- CREATE VIEW                              2
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
